!function($) {
    var rvertical = /up|down|vertical/, rpositivemotion = /up|left|vertical|horizontal/;
    $.jqplot.effects.effect.blind = function(o, done) {
        var wrapper, distance, top, el = $(this), props = [ "position", "top", "bottom", "left", "right", "height", "width" ], mode = $.jqplot.effects.setMode(el, o.mode || "hide"), direction = o.direction || "up", vertical = rvertical.test(direction), ref = vertical ? "height" : "width", ref2 = vertical ? "top" : "left", motion = rpositivemotion.test(direction), animation = {}, show = "show" === mode;
        el.parent().is(".ui-effects-wrapper") ? $.jqplot.effects.save(el.parent(), props) : $.jqplot.effects.save(el, props), 
        el.show(), top = parseInt(el.css("top"), 10), wrapper = $.jqplot.effects.createWrapper(el).css({
            overflow: "hidden"
        }), distance = vertical ? wrapper[ref]() + top : wrapper[ref](), animation[ref] = show ? String(distance) : "0", 
        motion || (el.css(vertical ? "bottom" : "right", 0).css(vertical ? "top" : "left", "").css({
            position: "absolute"
        }), animation[ref2] = show ? "0" : String(distance)), show && (wrapper.css(ref, 0), 
        motion || wrapper.css(ref2, distance)), wrapper.animate(animation, {
            duration: o.duration,
            easing: o.easing,
            queue: !1,
            complete: function() {
                "hide" === mode && el.hide(), $.jqplot.effects.restore(el, props), $.jqplot.effects.removeWrapper(el), 
                done();
            }
        });
    };
}(jQuery);
//# sourceMappingURL=jqplot.effects.blind.min.js.map