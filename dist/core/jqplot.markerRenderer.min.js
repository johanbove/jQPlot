!function($) {
    $.jqplot.MarkerRenderer = function(options) {
        this.show = !0, this.style = "filledCircle", this.lineWidth = 2, this.size = 9, 
        this.color = "#666666", this.shadow = !0, this.shadowAngle = 45, this.shadowOffset = 1, 
        this.shadowDepth = 3, this.shadowAlpha = "0.07", this.shadowRenderer = new $.jqplot.ShadowRenderer(), 
        this.shapeRenderer = new $.jqplot.ShapeRenderer(), $.extend(!0, this, options);
    }, $.jqplot.MarkerRenderer.prototype.init = function(options) {
        $.extend(!0, this, options);
        var sdopt = {
            angle: this.shadowAngle,
            offset: this.shadowOffset,
            alpha: this.shadowAlpha,
            lineWidth: this.lineWidth,
            depth: this.shadowDepth,
            closePath: !0
        };
        -1 != this.style.indexOf("filled") && (sdopt.fill = !0), -1 != this.style.indexOf("ircle") && (sdopt.isarc = !0, 
        sdopt.closePath = !1), this.shadowRenderer.init(sdopt);
        var shopt = {
            fill: !1,
            isarc: !1,
            strokeStyle: this.color,
            fillStyle: this.color,
            lineWidth: this.lineWidth,
            closePath: !0
        };
        -1 != this.style.indexOf("filled") && (shopt.fill = !0), -1 != this.style.indexOf("ircle") && (shopt.isarc = !0, 
        shopt.closePath = !1), this.shapeRenderer.init(shopt);
    }, $.jqplot.MarkerRenderer.prototype.drawDiamond = function(x, y, ctx, fill, options) {
        var stretch = 1.2, dx = this.size / 2 / stretch, dy = this.size / 2 * stretch, points = [ [ x - dx, y ], [ x, y + dy ], [ x + dx, y ], [ x, y - dy ] ];
        this.shadow && this.shadowRenderer.draw(ctx, points), this.shapeRenderer.draw(ctx, points, options);
    }, $.jqplot.MarkerRenderer.prototype.drawPlus = function(x, y, ctx, fill, options) {
        var stretch = 1, dx = this.size / 2 * stretch, dy = this.size / 2 * stretch, points1 = [ [ x, y - dy ], [ x, y + dy ] ], points2 = [ [ x + dx, y ], [ x - dx, y ] ], opts = $.extend(!0, {}, this.options, {
            closePath: !1
        });
        this.shadow && (this.shadowRenderer.draw(ctx, points1, {
            closePath: !1
        }), this.shadowRenderer.draw(ctx, points2, {
            closePath: !1
        })), this.shapeRenderer.draw(ctx, points1, opts), this.shapeRenderer.draw(ctx, points2, opts);
    }, $.jqplot.MarkerRenderer.prototype.drawX = function(x, y, ctx, fill, options) {
        var stretch = 1, dx = this.size / 2 * stretch, dy = this.size / 2 * stretch, opts = $.extend(!0, {}, this.options, {
            closePath: !1
        }), points1 = [ [ x - dx, y - dy ], [ x + dx, y + dy ] ], points2 = [ [ x - dx, y + dy ], [ x + dx, y - dy ] ];
        this.shadow && (this.shadowRenderer.draw(ctx, points1, {
            closePath: !1
        }), this.shadowRenderer.draw(ctx, points2, {
            closePath: !1
        })), this.shapeRenderer.draw(ctx, points1, opts), this.shapeRenderer.draw(ctx, points2, opts);
    }, $.jqplot.MarkerRenderer.prototype.drawDash = function(x, y, ctx, fill, options) {
        var stretch = 1, dx = this.size / 2 * stretch, points = (this.size / 2 * stretch, 
        [ [ x - dx, y ], [ x + dx, y ] ]);
        this.shadow && this.shadowRenderer.draw(ctx, points), this.shapeRenderer.draw(ctx, points, options);
    }, $.jqplot.MarkerRenderer.prototype.drawLine = function(p1, p2, ctx, fill, options) {
        var points = [ p1, p2 ];
        this.shadow && this.shadowRenderer.draw(ctx, points), this.shapeRenderer.draw(ctx, points, options);
    }, $.jqplot.MarkerRenderer.prototype.drawSquare = function(x, y, ctx, fill, options) {
        var stretch = 1, dx = this.size / 2 / stretch, dy = this.size / 2 * stretch, points = [ [ x - dx, y - dy ], [ x - dx, y + dy ], [ x + dx, y + dy ], [ x + dx, y - dy ] ];
        this.shadow && this.shadowRenderer.draw(ctx, points), this.shapeRenderer.draw(ctx, points, options);
    }, $.jqplot.MarkerRenderer.prototype.drawCircle = function(x, y, ctx, fill, options) {
        var radius = this.size / 2, end = 2 * Math.PI, points = [ x, y, radius, 0, end, !0 ];
        this.shadow && this.shadowRenderer.draw(ctx, points), this.shapeRenderer.draw(ctx, points, options);
    }, $.jqplot.MarkerRenderer.prototype.draw = function(x, y, ctx, options) {
        if (options = options || {}, null == options.show || 0 != options.show) switch (options.color && !options.fillStyle && (options.fillStyle = options.color), 
        options.color && !options.strokeStyle && (options.strokeStyle = options.color), 
        this.style) {
          case "diamond":
            this.drawDiamond(x, y, ctx, !1, options);
            break;

          case "filledDiamond":
            this.drawDiamond(x, y, ctx, !0, options);
            break;

          case "circle":
            this.drawCircle(x, y, ctx, !1, options);
            break;

          case "filledCircle":
            this.drawCircle(x, y, ctx, !0, options);
            break;

          case "square":
            this.drawSquare(x, y, ctx, !1, options);
            break;

          case "filledSquare":
            this.drawSquare(x, y, ctx, !0, options);
            break;

          case "x":
            this.drawX(x, y, ctx, !0, options);
            break;

          case "plus":
            this.drawPlus(x, y, ctx, !0, options);
            break;

          case "dash":
            this.drawDash(x, y, ctx, !0, options);
            break;

          case "line":
            this.drawLine(x, y, ctx, !1, options);
            break;

          default:
            this.drawDiamond(x, y, ctx, !1, options);
        }
    };
}(jQuery);
//# sourceMappingURL=jqplot.markerRenderer.min.js.map