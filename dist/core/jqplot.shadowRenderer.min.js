!function($) {
    $.jqplot.ShadowRenderer = function(options) {
        this.angle = 45, this.offset = 1, this.alpha = .07, this.lineWidth = 1.5, this.lineJoin = "miter", 
        this.lineCap = "round", this.closePath = !1, this.fill = !1, this.depth = 3, this.strokeStyle = "rgba(0,0,0,0.1)", 
        this.isarc = !1, $.extend(!0, this, options);
    }, $.jqplot.ShadowRenderer.prototype.init = function(options) {
        $.extend(!0, this, options);
    }, $.jqplot.ShadowRenderer.prototype.draw = function(ctx, points, options) {
        ctx.save();
        var opts = null != options ? options : {}, fill = null != opts.fill ? opts.fill : this.fill, fillRect = null != opts.fillRect ? opts.fillRect : this.fillRect, closePath = null != opts.closePath ? opts.closePath : this.closePath, offset = null != opts.offset ? opts.offset : this.offset, alpha = null != opts.alpha ? opts.alpha : this.alpha, depth = null != opts.depth ? opts.depth : this.depth, isarc = null != opts.isarc ? opts.isarc : this.isarc, linePattern = null != opts.linePattern ? opts.linePattern : this.linePattern;
        ctx.lineWidth = null != opts.lineWidth ? opts.lineWidth : this.lineWidth, ctx.lineJoin = null != opts.lineJoin ? opts.lineJoin : this.lineJoin, 
        ctx.lineCap = null != opts.lineCap ? opts.lineCap : this.lineCap, ctx.strokeStyle = opts.strokeStyle || this.strokeStyle || "rgba(0,0,0," + alpha + ")", 
        ctx.fillStyle = opts.fillStyle || this.fillStyle || "rgba(0,0,0," + alpha + ")";
        for (var j = 0; depth > j; j++) {
            var ctxPattern = $.jqplot.LinePattern(ctx, linePattern);
            if (ctx.translate(Math.cos(this.angle * Math.PI / 180) * offset, Math.sin(this.angle * Math.PI / 180) * offset), 
            ctxPattern.beginPath(), isarc) ctx.arc(points[0], points[1], points[2], points[3], points[4], !0); else if (fillRect) fillRect && ctx.fillRect(points[0], points[1], points[2], points[3]); else if (points && points.length) for (var move = !0, i = 0; i < points.length; i++) null != points[i][0] && null != points[i][1] ? move ? (ctxPattern.moveTo(points[i][0], points[i][1]), 
            move = !1) : ctxPattern.lineTo(points[i][0], points[i][1]) : move = !0;
            closePath && ctxPattern.closePath(), fill ? ctx.fill() : ctx.stroke();
        }
        ctx.restore();
    };
}(jQuery);
//# sourceMappingURL=jqplot.shadowRenderer.min.js.map