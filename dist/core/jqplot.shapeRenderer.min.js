!function($) {
    $.jqplot.ShapeRenderer = function(options) {
        this.lineWidth = 1.5, this.linePattern = "solid", this.lineJoin = "miter", this.lineCap = "round", 
        this.closePath = !1, this.fill = !1, this.isarc = !1, this.fillRect = !1, this.strokeRect = !1, 
        this.clearRect = !1, this.strokeStyle = "#999999", this.fillStyle = "#999999", this.fillGradient = !1, 
        this.fillGradientColor = "#FFFFFF", this.fillGradientDelay = .5, $.extend(!0, this, options);
    }, $.jqplot.ShapeRenderer.prototype.init = function(options) {
        $.extend(!0, this, options);
    }, $.jqplot.ShapeRenderer.prototype.draw = function(ctx, points, options) {
        ctx.save();
        var opts = null != options ? options : {}, fill = null != opts.fill ? opts.fill : this.fill, closePath = null != opts.closePath ? opts.closePath : this.closePath, fillRect = null != opts.fillRect ? opts.fillRect : this.fillRect, strokeRect = null != opts.strokeRect ? opts.strokeRect : this.strokeRect, clearRect = null != opts.clearRect ? opts.clearRect : this.clearRect, isarc = null != opts.isarc ? opts.isarc : this.isarc, linePattern = null != opts.linePattern ? opts.linePattern : this.linePattern, ctxPattern = $.jqplot.LinePattern(ctx, linePattern);
        if (ctx.lineWidth = opts.lineWidth || this.lineWidth, ctx.lineJoin = opts.lineJoin || this.lineJoin, 
        ctx.lineCap = opts.lineCap || this.lineCap, ctx.strokeStyle = opts.strokeStyle || opts.color || this.strokeStyle, 
        opts.fillGradient || this.fillGradient) {
            var grd = ctx.createLinearGradient(0, 0, 0, ctx.canvas.height);
            grd.addColorStop(opts.fillGradientDelay || this.fillGradientDelay, opts.fillStyle || this.fillStyle), 
            grd.addColorStop(1, opts.fillGradientColor || this.fillGradientColor), ctx.fillStyle = grd;
        } else ctx.fillStyle = opts.fillStyle || this.fillStyle;
        if (ctx.beginPath(), isarc) return ctx.arc(points[0], points[1], points[2], points[3], points[4], !0), 
        closePath && ctx.closePath(), fill ? ctx.fill() : ctx.stroke(), void ctx.restore();
        if (clearRect) return ctx.clearRect(points[0], points[1], points[2], points[3]), 
        void ctx.restore();
        if (fillRect || strokeRect) {
            if (fillRect && ctx.fillRect(points[0], points[1], points[2], points[3]), strokeRect) return ctx.strokeRect(points[0], points[1], points[2], points[3]), 
            void ctx.restore();
        } else if (points && points.length) {
            for (var move = !0, i = 0; i < points.length; i++) null != points[i][0] && null != points[i][1] ? move ? (ctxPattern.moveTo(points[i][0], points[i][1]), 
            move = !1) : ctxPattern.lineTo(points[i][0], points[i][1]) : move = !0;
            closePath && ctxPattern.closePath(), fill ? ctx.fill() : ctx.stroke();
        }
        ctx.restore();
    };
}(jQuery);
//# sourceMappingURL=jqplot.shapeRenderer.min.js.map