!function() {
    "use strict";
    var jqutils = {};
    jqutils.loadjscssfile = function(filename, filetype) {
        var fileref;
        if ("js" === filetype ? (fileref = document.createElement("script"), fileref.setAttribute("type", "text/javascript"), 
        fileref.setAttribute("src", filename)) : "css" === filetype && (fileref = document.createElement("link"), 
        fileref.setAttribute("rel", "stylesheet"), fileref.setAttribute("type", "text/css"), 
        fileref.setAttribute("href", filename)), fileref) try {
            "js" === filetype ? document.write("<script type='text/javascript' src='" + filename + "'></script>\n") : document.getElementsByTagName("head")[0].appendChild(fileref);
        } catch (e) {
            document.getElementsByTagName("head")[0].appendChild(fileref), fileref = null;
        }
    }, jqutils.getRootNode = function() {
        var scripts, pat, minpat, i, src, m, minified;
        if (document && document.getElementsByTagName) for (scripts = document.getElementsByTagName("script"), 
        pat = /jquery\.jqplot\.js/i, minpat = /jquery\.jqplot\.min\.js/i, i = 0; i < scripts.length; i++) if (src = scripts[i].getAttribute("src"), 
        console.log("test: ".concat(src)), src) {
            if (m = src.match(pat), minified = src.match(minpat), m) return {
                node: scripts[i],
                root: src.substring(0, m.index),
                minified: !1
            };
            if (minified) return {
                node: scripts[i],
                root: src.substring(0, minified.index),
                minified: !0
            };
        }
    };
    var i, rootNode, rn, pp, fileref, files = [ "jqplot.core.js", "jqplot.linearTickGenerator.js", "jqplot.linearAxisRenderer.js", "jqplot.axisTickRenderer.js", "jqplot.axisLabelRenderer.js", "jqplot.tableLegendRenderer.js", "jqplot.lineRenderer.js", "jqplot.markerRenderer.js", "jqplot.divTitleRenderer.js", "jqplot.canvasGridRenderer.js", "jqplot.linePattern.js", "jqplot.shadowRenderer.js", "jqplot.shapeRenderer.js", "jqplot.sprintf.js", "jsdate.js", "jqplot.themeEngine.js", "jqplot.toImage.js", "jqplot.effects.core.js", "jqplot.effects.blind.js", "jqplot.stairsRenderer.js" ], minfiles = [ "jqplot.core.min.js", "jqplot.linearTickGenerator.min.js", "jqplot.linearAxisRenderer.min.js", "jqplot.axisTickRenderer.min.js", "jqplot.axisLabelRenderer.min.js", "jqplot.tableLegendRenderer.min.js", "jqplot.lineRenderer.min.js", "jqplot.markerRenderer.min.js", "jqplot.divTitleRenderer.min.js", "jqplot.canvasGridRenderer.min.js", "jqplot.linePattern.min.js", "jqplot.shadowRenderer.min.js", "jqplot.shapeRenderer.min.js", "jqplot.sprintf.min.js", "jsdate.min.js", "jqplot.themeEngine.min.js", "jqplot.toImage.min.js", "jqplot.effects.core.min.js", "jqplot.effects.blind.min.js", "jqplot.stairsRenderer.min.js" ];
    for (rootNode = jqutils.getRootNode(), rn = rootNode.root, rootNode.minified && (files = minfiles), 
    i = 0; i < files.length; i++) pp = rn + files[i], fileref = document.createElement("script"), 
    fileref.setAttribute("type", "text/javascript"), fileref.setAttribute("src", pp), 
    jqutils.loadjscssfile(pp, "js");
}();
//# sourceMappingURL=jquery.jqplot.min.js.map