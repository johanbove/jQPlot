!function($) {
    "use strict";
    var postDraw = function() {
        var e;
        this.legend.renderer.constructor === $.jqplot.EnhancedLegendRenderer && this.legend.seriesToggle && this.legend._elem && (e = this.legend._elem.detach(), 
        this.eventCanvas._elem.after(e));
    }, getEventPosition = function(ev) {
        var plot, go, gridPos, dataPos, an, ax, n, axis;
        for (plot = ev.data.plot, go = plot.eventCanvas._elem.offset(), gridPos = {
            x: ev.pageX - go.left,
            y: ev.pageY - go.top
        }, dataPos = {
            xaxis: null,
            yaxis: null,
            x2axis: null,
            y2axis: null,
            y3axis: null,
            y4axis: null,
            y5axis: null,
            y6axis: null,
            y7axis: null,
            y8axis: null,
            y9axis: null,
            yMidAxis: null
        }, an = [ "xaxis", "yaxis", "x2axis", "y2axis", "y3axis", "y4axis", "y5axis", "y6axis", "y7axis", "y8axis", "y9axis", "yMidAxis" ], 
        ax = plot.axes, n = 11; n > 0; n--) axis = an[n - 1], ax[axis].show && (dataPos[axis] = ax[axis].series_p2u(gridPos[axis.charAt(0)]));
        return {
            offsets: go,
            gridPos: gridPos,
            dataPos: dataPos
        };
    }, handleToggle = function(ev) {
        var positions, p, evt, d, s, replot, plot, speed, sidx, showing, doLegendToggle = function() {
            var s, opts = {};
            replot ? ($.isPlainObject(replot) && $.extend(!0, opts, replot), plot.replot(opts), 
            showing && speed && (s = plot.series[sidx], s.shadowCanvas._elem && s.shadowCanvas._elem.hide().fadeIn(speed), 
            s.canvas._elem.hide().fadeIn(speed), s.canvas._elem.nextAll(".jqplot-point-label.jqplot-series-" + s.index).hide().fadeIn(speed))) : (s = plot.series[sidx], 
            s.canvas._elem.is(":hidden") || !s.show ? (("undefined" == typeof plot.options.legend.showSwatches || plot.options.legend.showSwatches === !0) && plot.legend._elem.find("td").eq(2 * sidx).addClass("jqplot-series-hidden"), 
            ("undefined" == typeof plot.options.legend.showLabels || plot.options.legend.showLabels === !0) && plot.legend._elem.find("td").eq(2 * sidx + 1).addClass("jqplot-series-hidden")) : (("undefined" == typeof plot.options.legend.showSwatches || plot.options.legend.showSwatches === !0) && plot.legend._elem.find("td").eq(2 * sidx).removeClass("jqplot-series-hidden"), 
            ("undefined" == typeof plot.options.legend.showLabels || plot.options.legend.showLabels === !0) && plot.legend._elem.find("td").eq(2 * sidx + 1).removeClass("jqplot-series-hidden")));
        };
        positions = getEventPosition(ev), p = ev.data.plot, evt = $.Event("jqplotLegendToggleSerie"), 
        evt.pageX = ev.pageX, evt.pageY = ev.pageY, d = ev.data, s = d.series, replot = d.replot, 
        plot = d.plot, speed = d.speed, sidx = s.index, showing = !1, evt.name = p.series[sidx].label, 
        $(this).trigger(evt, [ positions.gridPos, positions.dataPos, p ]), (s.canvas._elem.is(":hidden") || !s.show) && (showing = !0), 
        s.toggleDisplay(ev, doLegendToggle);
    };
    $.jqplot.EnhancedLegendRenderer = function() {
        $.jqplot.TableLegendRenderer.call(this);
    }, $.jqplot.EnhancedLegendRenderer.prototype = new $.jqplot.TableLegendRenderer(), 
    $.jqplot.EnhancedLegendRenderer.prototype.constructor = $.jqplot.EnhancedLegendRenderer, 
    $.jqplot.EnhancedLegendRenderer.prototype.init = function(options) {
        this.numberRows = null, this.numberColumns = null, this.seriesToggle = "normal", 
        this.seriesToggleReplot = !1, this.disableIEFading = !0, this.legendTextColor = "swatch", 
        $.extend(!0, this, options), this.seriesToggle && $.jqplot.postDrawHooks.push(postDraw);
    }, $.jqplot.EnhancedLegendRenderer.prototype.draw = function(offsets, plot) {
        var series, s, pad, reverse, nr, nc, i, j, tr, td1, td2, lt, rs, div0, div1, idx, color, speed, legend = this;
        if (!this.show) return this._elem;
        for (series = this._series, this._elem = $("<table/>", {
            "class": "jqplot-table-legend"
        }).css({
            position: "absolute",
            background: this.background,
            border: this.border,
            fontSize: this.fontSize,
            color: this.textColor,
            marginTop: this.marginTop,
            marginBottom: this.marginBottom,
            marginLeft: this.marginLeft,
            marginRight: this.marginRight
        }), this.seriesToggle && this._elem.css("z-index", "3"), pad = !1, reverse = !1, 
        this.numberRows ? (nr = this.numberRows, nc = this.numberColumns ? this.numberColumns : Math.ceil(series.length / nr)) : this.numberColumns ? (nc = this.numberColumns, 
        nr = Math.ceil(series.length / this.numberColumns)) : (nr = series.length, nc = 1), 
        idx = 0, i = series.length - 1; i >= 0; i--) (1 === nc && series[i]._stack || series[i].renderer.constructor === $.jqplot.BezierCurveRenderer) && (reverse = !0);
        for (i = 0; nr > i; i++) {
            for (tr = $("<tr/>", {
                "class": "jqplot-table-legend"
            }), reverse ? tr.prependTo(this._elem) : tr.appendTo(this._elem), j = 0; nc > j; j++) idx < series.length && (series[idx].show || series[idx].showLabel) && (s = series[idx], 
            lt = this.labels[idx] || s.label.toString(), lt && (color = s.color, pad = reverse ? i === nr - 1 ? !1 : !0 : i > 0 ? !0 : !1, 
            rs = pad ? this.rowSpacing : "0", td1 = $("<td/>", {
                "class": "jqplot-table-legend jqplot-table-legend-swatch"
            }).css({
                textAlign: "center",
                paddingTop: rs
            }), div0 = $("<div/>", {
                "class": "jqplot-table-legend-swatch-outline"
            }), div1 = $("<div/>", {
                "class": "jqplot-table-legend-swatch"
            }).css({
                backgroundColor: color,
                borderColor: color
            }), td1.append(div0.append(div1)), td2 = $("<td/>", {
                "class": "jqplot-table-legend jqplot-table-legend-label"
            }).css({
                paddingTop: rs,
                color: "swatch" === legend.legendTextColor ? color : "inherit"
            }), this.escapeHtml ? td2.text(lt) : td2.html(lt), reverse ? (this.showLabels && td2.prependTo(tr), 
            this.showSwatches && td1.prependTo(tr)) : (this.showSwatches && td1.appendTo(tr), 
            this.showLabels && td2.appendTo(tr)), this.seriesToggle && (("string" == typeof this.seriesToggle || "number" == typeof this.seriesToggle) && ($.jqplot.use_excanvas && this.disableIEFading || (speed = this.seriesToggle)), 
            this.showSwatches && (td1.bind("click", {
                series: s,
                speed: speed,
                plot: plot,
                replot: this.seriesToggleReplot
            }, handleToggle), td1.addClass("jqplot-seriesToggle")), this.showLabels && (td2.bind("click", {
                series: s,
                speed: speed,
                plot: plot,
                replot: this.seriesToggleReplot
            }, handleToggle), td2.addClass("jqplot-seriesToggle")), !s.show && s.showLabel && (td1.addClass("jqplot-series-hidden"), 
            td2.addClass("jqplot-series-hidden"))), pad = !0)), idx++;
            td1 = td2 = div0 = div1 = null;
        }
        return this._elem;
    };
}(jQuery);
//# sourceMappingURL=jqplot.enhancedLegendRenderer.min.js.map