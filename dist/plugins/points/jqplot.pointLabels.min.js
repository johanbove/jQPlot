!function($) {
    "use strict";
    var locationIndicies = {
        nw: 0,
        n: 1,
        ne: 2,
        e: 3,
        se: 4,
        s: 5,
        sw: 6,
        w: 7
    }, oppositeLocations = [ "se", "s", "sw", "w", "nw", "n", "ne", "e" ];
    $.jqplot.PointLabels = function(options) {
        this.show = $.jqplot.config.enablePlugins, this.location = "n", this.labelsFromSeries = !1, 
        this.seriesLabelIndex = null, this.labels = [], this._labels = [], this.stackedValue = !1, 
        this.ypadding = 6, this.xpadding = 6, this.escapeHTML = !0, this.edgeTolerance = -5, 
        this.formatter = $.jqplot.DefaultTickFormatter, this.formatString = "", this.hideZeros = !1, 
        this._elems = [], this.darkColor = "#000", this.brightColor = "#EEE", this.checkColorBrightnessLevel = !1, 
        $.extend(!0, this, options);
    }, $.jqplot.PointLabels.init = function(target, data, seriesDefaults, opts, plot) {
        var options = $.extend(!0, {}, seriesDefaults, opts);
        options.pointLabels = options.pointLabels || {}, this.renderer.constructor !== $.jqplot.BarRenderer || "horizontal" !== this.barDirection || options.pointLabels.location || (options.pointLabels.location = "e"), 
        this.plugins.pointLabels = new $.jqplot.PointLabels(options.pointLabels), this.plugins.pointLabels.setLabels.call(this);
    }, $.jqplot.PointLabels.prototype.setLabels = function() {
        var labelIdx, d, i, p = this.plugins.pointLabels;
        if (labelIdx = null !== p.seriesLabelIndex ? p.seriesLabelIndex : this.renderer.constructor === $.jqplot.BarRenderer && "horizontal" === this.barDirection ? this._plotData[0].length < 3 ? 0 : this._plotData[0].length - 1 : 0 === this._plotData.length ? 0 : this._plotData[0].length - 1, 
        p._labels = [], 0 === p.labels.length || p.labelsFromSeries) if (p.stackedValue) {
            if (this._plotData.length && this._plotData[0].length) for (i = 0; i < this._plotData.length; i++) p._labels.push(this._plotData[i][labelIdx]);
        } else {
            if (d = this.data, this.renderer.constructor === $.jqplot.BarRenderer && this.waterfall && (d = this._data), 
            d.length && d[0].length) for (i = 0; i < d.length; i++) p._labels.push(d[i][labelIdx]);
            d = null;
        } else p.labels.length && (p._labels = p.labels);
    }, $.jqplot.PointLabels.prototype.xOffset = function(elem, location, padding) {
        var offset;
        switch (location = location || this.location, padding = padding || this.xpadding, 
        location) {
          case "nw":
            offset = -elem.outerWidth(!0) - this.xpadding;
            break;

          case "n":
            offset = -elem.outerWidth(!0) / 2;
            break;

          case "ne":
            offset = this.xpadding;
            break;

          case "e":
            offset = this.xpadding;
            break;

          case "se":
            offset = this.xpadding;
            break;

          case "s":
            offset = -elem.outerWidth(!0) / 2;
            break;

          case "sw":
            offset = -elem.outerWidth(!0) - this.xpadding;
            break;

          case "w":
            offset = -elem.outerWidth(!0) - this.xpadding;
            break;

          default:
            offset = -elem.outerWidth(!0) - this.xpadding;
        }
        return offset;
    }, $.jqplot.PointLabels.prototype.yOffset = function(elem, location, padding) {
        var offset;
        switch (location = location || this.location, padding = padding || this.xpadding, 
        location) {
          case "nw":
            offset = -elem.outerHeight(!0) - this.ypadding;
            break;

          case "n":
            offset = -elem.outerHeight(!0) - this.ypadding;
            break;

          case "ne":
            offset = -elem.outerHeight(!0) - this.ypadding;
            break;

          case "e":
            offset = -elem.outerHeight(!0) / 2;
            break;

          case "se":
            offset = this.ypadding;
            break;

          case "s":
            offset = this.ypadding;
            break;

          case "sw":
            offset = this.ypadding;
            break;

          case "w":
            offset = -elem.outerHeight(!0) / 2;
            break;

          default:
            offset = -elem.outerHeight(!0) - this.ypadding;
        }
        return offset;
    }, $.jqplot.PointLabels.draw = function(sctx, options, plot) {
        var i, len, elem, helem, ax, label, location, ell, elt, elr, elb, et, scl, sct, scr, scb, barPoint, serieColor, p = this.plugins.pointLabels, pd = this._plotData, xax = this._xaxis, yax = this._yaxis, that = this;
        for (p.setLabels.call(this), i = 0, len = p._elems.length; len > i; i++) p._elems[i] && p._elems[i].emptyForce();
        if (p._elems.splice(0, p._elems.length), p.show) for (ax = "_" + this._stackAxis + "axis", 
        p.formatString || (p.formatString = this[ax]._ticks[0].formatString, p.formatter = this[ax]._ticks[0].formatter), 
        i = 0, len = p._labels.length; len > i; i++) label = p._labels[i], location = p.location, 
        null === label || p.hideZeros && 0 === parseInt(label, 10) || (label = p.formatter(p.formatString, label), 
        helem = document.createElement("div"), p._elems[i] = $(helem), elem = p._elems[i], 
        elem.addClass("jqplot-point-label jqplot-series-" + this.index + " jqplot-point-" + i).css("position", "absolute"), 
        serieColor = this._dataColors && this._dataColors[i] ? this._dataColors[i] : this.color, 
        ("horizontal" === this.barDirection && "w" === p.location || p.checkColorBrightnessLevel) && ($.jqplot.isDarkColor(serieColor) ? (elem.addClass("jqplot-point-brightColor"), 
        null !== p.brightColor && elem.css("color", p.brightColor)) : (elem.addClass("jqplot-point-darkColor"), 
        null !== p.darkColor && elem.css("color", p.darkColor))), elem.insertAfter(sctx.canvas), 
        p.escapeHTML ? elem.text(label) : elem.html(label), (this.fillToZero && pd[i][1] < 0 || this.fillToZero && "bar" === this._type && "horizontal" === this.barDirection && pd[i][0] < 0 || (this.waterfall && parseInt(label, 10)) < 0) && (location = oppositeLocations[locationIndicies[location]]), 
        ell = xax.u2p(pd[i][0]) + p.xOffset(elem, location), elt = yax.u2p(pd[i][1]) + p.yOffset(elem, location), 
        this._stack && !p.stackedValue && (barPoint = that._barPoints[i], "vertical" === this.barDirection ? (elt = (barPoint[0][1] + barPoint[1][1]) / 2 + plot._gridPadding.top - .5 * elem.outerHeight(!0), 
        ell = (barPoint[2][0] + barPoint[0][0]) / 2 + plot._gridPadding.left - .5 * elem.outerWidth(!0)) : ell = (barPoint[2][0] + barPoint[0][0]) / 2 + plot._gridPadding.left - .5 * elem.outerWidth(!0)), 
        this.renderer.constructor === $.jqplot.BarRenderer && ("vertical" === this.barDirection ? ell += this._barNudge : elt -= this._barNudge), 
        elem.css({
            left: ell,
            top: elt
        }), elr = ell + elem.width(), elb = elt + elem.height(), et = p.edgeTolerance, scl = $(sctx.canvas).position().left, 
        sct = $(sctx.canvas).position().top, scr = sctx.canvas.width + scl, scb = sctx.canvas.height + sct, 
        elem = null, helem = null);
    }, $.jqplot.postSeriesInitHooks.push($.jqplot.PointLabels.init), $.jqplot.postDrawSeriesHooks.push($.jqplot.PointLabels.draw);
}(jQuery);
//# sourceMappingURL=jqplot.pointLabels.min.js.map